/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemploudp;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;

/**
 *
 * @author roafi
 */
public class Servidor extends javax.swing.JFrame {

    /**
     * Creates new form Servidor
     */
    
    private Menu menu;
    private InetAddress ip;
    private boolean activo;
    private HiloServidor hilo;
    
    public Servidor(Menu menu) {
        initComponents();
       
        cmbIP.setModel( new javax.swing.DefaultComboBoxModel(getMachineIP()));
        getMachineIP();
        activo=true;
        try {
            ip=InetAddress.getLocalHost();
        } catch (UnknownHostException ex) {
            
        }
        this.menu=menu;
        Toolkit tk=Toolkit.getDefaultToolkit();
        Dimension d=tk.getScreenSize();
        setTitle("Servidor UDP");
        setSize(415,330);
        setLocation((d.width-getSize().width)/2,(d.height-getSize().height)/2);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        setVisible(true);
    }
  
  public String[] getMachineIP() {
   Enumeration en=null;
   List<String> datos=new ArrayList<String>();
        try {
            en = NetworkInterface.getNetworkInterfaces();
            while(en.hasMoreElements()){
                NetworkInterface ni=(NetworkInterface) en.nextElement();
                Enumeration ee = ni.getInetAddresses();
                while(ee.hasMoreElements()) {
                    InetAddress ia= (InetAddress) ee.nextElement();
                    if (!ia.getHostAddress().contains(":")){
                        datos.add(ia.getHostAddress());
                    }
                }
                
        }
        } catch (SocketException ex) {}
        String[] tmp;
        tmp=new String[datos.size()];
        for(int i=0;i<tmp.length;i++)
            tmp[i]=datos.get(i);
        return tmp;
}

  public String getIP()
    {
        return ((String)(cmbIP.getSelectedItem())).trim();
    }
    public String getPuerto()
    {
        return txtPuerto.getText().trim();
    }
     public void setMensaje(String msg)
    {
        txtMensajes.setText(msg);
    }
    
    public String getMensaje()
    {
        return txtMensajes.getText();
    }
    
    public boolean getActivo()
    {
        return activo;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensajes = new javax.swing.JTextArea();
        lblIP = new javax.swing.JLabel();
        lblPuerto = new javax.swing.JLabel();
        txtPuerto = new javax.swing.JTextField();
        btnIniciar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        cmbIP = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        txtMensajes.setEditable(false);
        txtMensajes.setColumns(20);
        txtMensajes.setRows(5);
        jScrollPane1.setViewportView(txtMensajes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 78, 400, 160);

        lblIP.setText("IP:");
        getContentPane().add(lblIP);
        lblIP.setBounds(20, 20, 50, 20);

        lblPuerto.setText("PUERTO:");
        getContentPane().add(lblPuerto);
        lblPuerto.setBounds(190, 20, 60, 20);
        getContentPane().add(txtPuerto);
        txtPuerto.setBounds(250, 20, 120, 20);

        btnIniciar.setText("INICIAR");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(btnIniciar);
        btnIniciar.setBounds(63, 260, 90, 23);

        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar);
        btnCerrar.setBounds(203, 260, 90, 23);

        cmbIP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cmbIP);
        cmbIP.setBounds(40, 20, 120, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
       menu.setVisible(true);
       activo=false;
       if (hilo!=null)
        hilo.notificar();
       this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         menu.setVisible(true);
          activo=false;
        if (hilo!=null)
            hilo.notificar();
     
    }//GEN-LAST:event_formWindowClosing

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
       if (txtPuerto.getText().equals(""))
            JOptionPane.showMessageDialog(null, "Completa los campos de IP y PUERTO!!");
       else
       {
            cmbIP.setEnabled(false);
            txtPuerto.setEnabled(false);
            btnIniciar.setEnabled(false);
            hilo=new HiloServidor(this);
            hilo.start();
       }
    }//GEN-LAST:event_btnIniciarActionPerformed

 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JComboBox cmbIP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblPuerto;
    private javax.swing.JTextArea txtMensajes;
    private javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables
}
